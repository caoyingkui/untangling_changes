hash,numPartitions,bug references,message
91a2ebb43da351803e28d86e9146b76852362304,2,800,Fix for issue #800. Adds getOverridableMethods() to JClassType. See the unit tests as well for the cases that are included/excluded. Also added some dictionary entries to allow JClassType to pass the spellchecker.  Review by: scottb
7a97be9658d8549f7cc7c981856ffec0f2ef59e5,4,"472, 627, 736, 739","Fixes issues #472, #627, #736, #739  Refactor hosted mode code and rewrite Mozilla code to properly handle garbage collection of JavaScript objects held as references within Java objects.  The Mac changes simply adapt the existing Mac code to the new infrastructure, but do not fix the outstanding memory leak problems -- these will be addressed in a future patch.  Also added sample eclipse projects for the Mac and Linux JNI code.  Review by: scottb knorton "
34a022cf7c866c3eacb1da19c68a01d34ea5ae7c,2,774,Fix for issue #774. Deleted several archaic tests that are not relevant anymore. Moved a two tests into user and cleaned them up big time.
e955f6c52154fb9c51335b1d314bba00a9d35ee0,2,785,"This fixes issue #785 and re-enables a disabled test in HostedTest related to hosted mode wrapped Java Objects answering ""toString()"" in JSNI code.  Review by: jat knorton"
0eefc507477395905010d8cd650cebf76c6b63a9,2,"803, 922",Fix for issue #803 and #922; using JavaScript keywords in Java code would crash the compiler with an ICE.  This patch mangles such identifiers by appending an '_$' to the end.  Found by: jason.essington Review by: mmendez 
7ad352a500fb869b933abd52ee99aa220db0a5da,2,"671, 872","Fix for isOrHasChild() null & exception cases. Issues: 671, 872 Patch by: ecc, jat, fredsa, jgw Review by: jgw, ecc "
098d421d4bc8ca1a2e2830148b0a4c50e89bf31a,2,407,"Fixes Issue #407. Safari has been relying on DOMImplStandard to provide toString(Element), which uses DOM restructuring that is only required on Mozilla. This change makes the DOMImpl version of toString rely on outerHTML and moves the DOM restructuring approach into DOMImplMozilla. Also included are the proper confirmations in DOMTest.  Review by: jgw  "
fdcbb527f2bcf1b638781613bb0db385e440e991,2,631,"Fixes Issue #631. Avoid collisions with pre-defined properties in JavaScript objects, either by prepending a "":"" where we have control over accesses to the underlying object, or by using Object.hasOwnProperty for ones that we don't.  Added RPC test for String arrays with values to verify that strings with property names are properly handled.  Patch by: sandymac, jat Review by: knorton, mmendez  "
d01cd5f501eaf91d511cae0fed031ab0dfdd6dc4,2,937,"Fix for issue #937; static initializers must statically initialize super class.  Also includes a fix for a possible ICE in GenerateJavaAST.java when JDT hands us a ThisRef while processing field initializers in an interface.  Review by: mmendez, alex.tkachman  "
f00bfcc75cfc8c4c1bf382aa3c76eae47ef3fa7f,3,,Fixes Issues #74 & #790. Adds Widget.onUnload() and clarifies the correct usage of onDetach(). An assertion has also been added to setParent() to check the value of isAttached() when running in hosted mode.  Patch by: bobv Review by: knorton  
26d69d46ad7fbb01ac5a2cd9a03084f73e9cff51,2,"966,867","Fix for issues #966 and #867; escapes HTML end tags from string literals in compiler output.  Found by: fredsa, dmytro Patch by: tobyr Review by: scottb "
940594c0bdfba1c62e85aa3df37ecf56886e6f69,2,972,Fix for issue #972; removes dependency from RPC server code into gwt-dev. Also removes an unneeded param from TypeInfo.getSourceRepresentation().  Found by: mmendez Review by: mmendez (postmortem) 
f8897f05835b480f0a694be1801c7359c850e1cd,,,"Fixes Issue #693. Fixes a problem with AbsolutePanel where large Widgets may flicker when being added to an AbsolutePanel due to position being set after DOM attachment. This change reverses the order of operations such that the position is set prior to DOM attachment. This also includes a javadoc fix to document the special case in add(Widget, int, int) to get static positioning.  Patch by: bobv Review by: knorton  "
583e5cdf7581f6be5fdc3f700939799c257f8151,2,982,Fixes Issues #596 & #982. Includes the following changes: 1 - Removes the children field from within TabPanel to rely exclusively on the contained DeckPanel to maintain the child widgets. 2 - Introduces nested unmodifiable classes for DeckPanel and TabBar to prevent invariant violating changes from being made though getTabBar() and getDeckPanel(). 3 - Expands TabPanelTest to verify the behavior introduced in 2.  Patch by: bobv Review by: knorton  
8b8af53f97c2814b228d62ad7c153d893fa3508e,2,282,"Fixes issue #282; adds a DOM.setImgSrc() in order to use crazy magic to avoid multiple image fetches when the same image is requested multiple times simultaneously on IE.  Accidentally, this commit also contains a fix to HistoryImplSafari to load history.html relative to the module base url, which was reviewed by jgw.  Found by: cchenshong2001 Patch by: scottb, tobyr, bruce Review by: bruce, jgw, jat, tobyr "
4adbb52f06b93f41e1ec4701cbef0c62c6ac620a,2,1022,"Fix for issue #1022; makes GWT.getModuleBaseURL() correct in the mashup case.  Some cases require crazy magic with setting and retrieving the URL of an image.  Also adds a new GWT.getHostPageBaseURL().  Found by: me Suggested by: jason.essington Review by: bruce, jgw, mmendez"
59f432b056c70b6f84c5e038619282ae1b71cf4f,,,Fixes Issue #1030. Converts Tree's internal images to use an ImageBundle and deprecates setImageBase and getImageBase (though they still function properly for backwards compatibility). It also adds an example to the doc to illustrate how to override Tree's default images.  Review by: bruce  
9f1f941d2414553ab0db34bb54a0977cb6437f6f,2,897,"Fix for issue #897; prevents IE from throwing an exception when trying to set focus on a hidden/detached widget.  Also does some yummy refactoring goodness.  Review by: knorton, jgw (postmortem) "
455bf87702161875f99d987265dfb73cbd52bd0e,2,602,"Fixes Issue #602. Updates eventGetClientX and eventGetClientY in DOMImplIE6 to account for clientTop and clientLeft offsets in IE6. This currently manifests as the classic IE6 off by 2 error. Also does a small amount of refactoring to aggregate common calls to retreive clientTop and clientLeft.  Patch by: fredsa, knorton Review by: bruce  "
9ad34ae87810de268863d01f6d7a99de86ba6557,,,Fixes issue 1097; added a unit test for this case.  The code will now validate the interface in the aggregate.  Minor doc fix for ReachableTypeOracleBuilder.  Patch by: mmendez Review by: scottb (desk check)
b4b848d1fce77751a874a8566257fe211ea007c0,2,,"- Fixes a bug that was keeping IE from respecting rebasing the application via the <base> tag. - Makes the module's entry point fire as soon as the DOM is fully loaded, but before window.onload() fires (so that images and iframes don't keep the app from starting).  Patch by: jgw Review by: scottb Issue: 1141 "
2b7e8bfc2d52b7f9d9015b38cc9e0dfaa60a49d2,2,,Fixes Issue #1235. Cleans up and makes more reliable the changes made in r1257.  Review by: scottb  
4da0e7a455b9f2216f31a5bc8c5cbe915798a6a6,2,1121,"Clarifies the order in which onLoad() and onUnload() will be called. onLoad() will always be called *after* a Widget becomes attached, and onUnload() will be called just *before* a Widget is detached.  Also adds template methods doAttachChildren() and doDetachChildren() making it easier for Widgets to maintain this contract correctly.  Patch by: jgw Review by: knorton, sandymac Issue: 1121  "
87da6cb130284de0bfca87ff52a8bb309a5069ab,2,"1180, 1181","Fixes issues 1180 and 1181.  In addition, it also normalizes the scales for graphs of the same benchmark and includes several UI improvements (styling, hyperlinks, improved reports list, to name a few).  Patch by: tobyr Review by: mmendez   "
c519fa9caa8404de42841bd9007dfe616e6f1b4d,2,1386,"Description: Fixes Issue #1386 The TextBox example gives a bad example of limiting input to numeric only values because it doesn't allow any navigational input from arrow keys, backspace, delete, and similar.  It literally allows nothing but numeric values.  Fix: Per Joel's example, I added more clauses to the if statement to allow the following keys in addition to numeric keys: backspace, delete, enter, home, end, left, right, up, and down  For these keys, I used the static values in the KeyboardListener class instead of hardcoding keyCodes into the example.  Patch by: rshearer,jlabanca Review by: jgw  "
0e0a6b1aa67c163a4e8eeeba4292a8c1c9f1b185,3,"1248, 1258, 1267","fixes issues #1248, 1258 and #1267. fixes various issues with HorizontalSplitPanel.  Review by: jgw  "
819260dfa04b4940be4b04aa2263007e98d6151e,7,"1130, 1214, 1227, 1273, 1293, 1443","Omnibus patch for a number of related rich text area issues. Also includes some refactoring to make the RichTextAreaImpl classes a bit less ugly.  Patch by: jgw Review by: knorton Issues: 1130, 1214, 1227, 1273, 1293, 1443  "
ad9282e5711c5750a0f4726ee0d9dbe26e992ec7,2,"1507, 1508","Fixes RichTextArea's background color and font size on various versions of Safari.  Issue: 1507, 1508 Patch by: jgw Review by: knorton (desk check) "
3940698848ca716b214bc6251ae4f1f348fb9197,2,1583,"Fixes Arrays.sort (and therefore Collections.sort) to be stable as specified by the JRE.  This is currently done using mergesort as that is faster in IE, but the native sort + fixup code is left in this commit because it is significantly faster on Safari and Firefox -- we may choose to use deferred binding in the JRE at some point in the future to take advantage of it.  Issue: 1583 Patch by: jat Review by: scottb  "
c1a90eaa563b920f4e58a98ca40eb1aa5fb58b3b,3,"1513, 1751",Fixes issues 1513 1751.  Also updates the unit tests to properly check for POST parameters.  Patch by: mmendez Review by: scottb  
486fa9da6edbc774776f81c3909a2871feacfb47,2,"1586, 1660","Fix issue #1586. The i18nCreator did not have a way to create a ConstantsWithLookup derived interface.The code to generate an interface that extends ConstantsWithLookup is already there, the tool was just missing arguments to invoke it.  This patch adds a -createConstantsWithLookup argument to be passed to I18NCreator and the I18NSync main classes.  Fix issue #1660. When using URL.getPath() to construct a File object, the path needs to be decoded using URLDecode. This needs to be done in order to handle file paths on systems that allow spaces in file/directory names (i.e. Windows).  Patch by: zundel Review by: rdayal"
d6eb111295dbf1c8fcfccef7fea2a04f5e59ab8c,,,"Implement String.contains and associated test.  Also fix typo in StringTest.  Issue: 1729 Patch by: rovrevik (minor touchups by jat) Review by: jat, tobyr (desk review)   "
768d3900e1013acf87d99aff092943d986341441,4,2033,Fixes issue 2033.  Leveraged JDT's computed constant value for an expression instead of the actual written expression.  Also dealt with:  * Implicit conversion of primitives in the annotation value expressions. * Implicit array initializers in default annotation value expressions. * Erroneous assertions in the AnnotationProxyInvocationHandler when the return type was a primitive.  Found by: tobyr Patch by: mmendez Review by: jat
cfa94b0333ca22eb3bfbfa475a0f481020df2ec0,,,"This patch includes style and animation enhancements to multiple widgets.  The Animation base class provides basic animation support controlled by a single Timer.  Many widgets now use animations to create UI effects on user actions.  Animations can be disabled en mass using one of two properties: gwt.enableAnimations and gwt.enabledWidgetAnimations.  In addition, animations can be enabled or disabled on a Widget by Widget basis.  The DOM structure of some widgets has changed in order to provide more robust styles, which will be including the Showcase sample.  To be reviewed.  This patch was partially reviewed by Rajeev, but a full review will be needed.  Bruce, Joel, and I agreed that we should put these changes into milestone 2 so we can get some feedback from external users.  All of these changes have been tested extensively on all browsers.  Issue: 1607 Patch by: jlabanca  "
7d33b00156e52a37fb86bf676bea180bd0ef8024,2,2171,"Addresses issue 2171. Adds the @Resource annotation to ImageBundle and deprecates the old @gwt.resource javadoc pseudo-annotation. Includes updated javadoc, samples, and a bonus class ""UnitTestTreeLogger"" that makes it easier to unit test behavior with respect to logging.  Patch by: bruce Review by: bobv"
f1b1653b5f0b00a0e8b4288d9134e687653d46b9,3,,"Fixes issues #490, #986, #1066.  Implements a number of missing String and Character methods, adds and improves many of the tests for these classes, and adds a general-purpose method to hide constants from the compiler to make tests more resilient against compiler optimizations.  Issues: 490, 986, 1066 Patch by: jat Review by: spoon  "
79be451a9a17b939b3934b6d4b9fdbd04d66b9b4,2,439,"Throw a StatusCodeException into AsyncCallback.onFailure() when the HTTP response's status code is not 200. Correct a possible NPE if the result has no payload. Fixes issues 439, 2265  Patch by: bobv Reported by: mmikhailov, mortenmo Review by: jat "
bae509238aabed554237dce3c107e4f31ecf072b,2,"13,681,610","Adds setTimeout() around clearing of onreadystatechange to avoid crash bugs on some IE/jscript.dll combinations.  Changes progIds used for creating MXSML from mxsml2.* to microsoft.*  Issues: 1368, 1610 Patch by: jgw, ajr Review by: ajr  "
e33a09e4e861f14d56ecc161ad346f93bf5c20be,4,"1546, 1778, 1788, 1804","Issues: 1546, 1778, 1788, 1804 (multi-module bug fixes) Patch by: jgw, jason.essington, mmastrac, benjamin.vitale Review by: scottb  "
1827c8577010f9f581a39544b50e760fbc939ee4,2,"1549, 1949",Fixes issues 1549 and 1949: fixes and standardizes which characters get escaped when they're used in history tokens. We were previously being overzealous by using escapeURIComponent.  patch by: ajr and jgw reviewed by: jgw  
2008d229484afb9e15326801832485aa423b83be,2,,Added methods to insert MenuItems and MenuItemSeparators into MenuBars.  Also fixed a MenuBar bug where the visible submenu of the previous MenuItem would remain open if the user highlights a MenuItem that does not have a visible submenu.  Patch by: jlabanca Review by: jgw Issue: 2301  
afc2f671263ec58ec76c31332485f1f8a03df25f,2,1385,"Fixed an issue where TextBoxBase.setSelectionRange() can throw an error if the element is not attached to the page or not visible.  Also fixed an error in TextBoxBase.getSelectedText() where it throws an exception in IE if the cursorPos is -1, which can happen if the element is not attached.  Patch by: jlabanca Review by: ecc Issue: 1385"
353473f8b1b5b172f9404befa84d31a8e4bf6024,2,3455,"Per issue 3455, split up very long var lines to avoid a bug in the beta version of Safari 4.  This also adds a CompilerParameters module.  It looks useful for testing to be able to tune way down compiler settings such as this one.  Review by: jgw  "
73a149920f270f9796d88f81fcd31d30077e4ce4,2,"3717, 3733","Merge trunk r5523 into the 6/2 snapshot branch.  svn merge -c5523 https://google-web-toolkit.googlecode.com/svn/trunk .  r5523 | jgw@google.com | 2009-06-08 17:25:39 -0400 (Mon, 08 Jun 2009) | 5 lines  Fixes issues 3717 and 3733 by adding some extra latching to avoid creating the script frame until the body's done loading. Patch by: mark.renouf, jgw Review by: jgw, scottb (desk check)  "
5125c51881ee9f77c8fffed2d48f8ac2bf0ac5c7,4,"2907, 4277, 4278","Fixes issues 2907, 4277 and 4278. Also fixes mail icon showing up in front of the about dialog. Review: http://gwt-code-reviews.appspot.com/113801"
037d52da159cd85ba7aa2a5d563c62e94413bbc9,3,"3133, 3176, 3503","Reapplying r5742 and r5747 to fix RichTextArea issues 3133, 3176, 3503.  The original version of this patch was reverted because it failed in FF.  There is a small delay between the time an iframe is attached to the DOM and when it is actually available for focus.  Programatically calling setFocus() immediately after attach will fail to focus on the iframe.  This patch defers focus until design mode has completely initialized.  Review at http://gwt-code-reviews.appspot.com/555801  Review by: jgw@google.com"
c68541e00ef9bd8add1c4be95e2d4c72d6b91a5e,2,,Added null checks to MenuItem.setSubMenu(null) so it doesn't throw an NPE.  Also made sure that the Accessibility HASPOPUP state is set to false when the submenu is removed. http://code.google.com/p/google-web-toolkit/issues/detail?id=4756  http://gwt-code-reviews.appspot.com/556801 
9f87677d925f94a95e8ef5eebb7e7144f8667929,2,,Issue 5518 Fix: Panel Alignment Attributes Have No Effect  Fix Alignment Attribute Parsing for HasAlignment  Review at http://gwt-code-reviews.appspot.com/1121801  Review by: rjrjr@google.com
bc607786b1881b61a4438a3e1d71f6533759a7e6,2,,Fixes two DevMode issues: 1 - Generic SingleImplJso interfaces are now mapped by their JGenericType in TypeOracle instead of their JParameterizedType since lookups in DevMode will use the generic type. 2 - Fixes a bug in CompilingClassLoader where SingleImplJso interfaces would have their methods mapped to the leaf JSO impl and not the actual declaring type for the method. Review at http://gwt-code-reviews.appspot.com/1140801 Review by scottb@google.com  Review by: jgw@google.com
0849fdc7c0d7c02c7d6f3061339aa3ea704e068a,3,"5521, 5446, 5332","Fix external issues 5521, 5446, 5332, javadoc links  Review at http://gwt-code-reviews.appspot.com/1186801  Review by: rchandia@google.com"
c59cfe75144198d8027e2dd55877067b583937a6,2,,"Change floats to doubles and work around a firefox bug.  1) Floats and doubles are equivalent in JS but using floats requires casting (e.g., 3.14 -> 3.14f or Math.PI -> (float)Math.PI). Therefore, I've switched to just using doubles.  2) Firefox has a bug where the anticlockwise parameter to arc is not optional (see https://bugzilla.mozilla.org/show_bug.cgi?id=617319). I've worked around it and have added a test case.  Review at http://gwt-code-reviews.appspot.com/1192801  Review by: rice@google.com"
2666f543935b1d023c57bd4604376e6c49ba14a4,2,,Updating the javadoc on the Anchor() constructor to explain that it does not set the href of the anchor element.  Also adding a new constructor Anchor(boolean) to make it easier to add a default HREF without requiring that users call one of the other constructors with an empty string.  http://gwt-code-reviews.appspot.com/1354804/show  Issue: 4502  Review by: rjrjr@google.com
5bde65e497f031202d56af2285836c74728a8634,2,,Fixed pom.xml produced by WebAppCreator. Issue 4878 and Issue 6196.  Review at http://gwt-code-reviews.appspot.com/1407804  Review by: drfibonacci@google.com
3d4ea657bf03a743e9f2f323b26071340427b334,3,,"This patch addresses issue #17 by getting RebindOracle out of the business of worrying about instantiability and only trying to instantiate the entry point class if onModuleLoad() is non-static.  In addition to allowing uninstantiable classes to be used as entry points, it also clears up a discrepancy between hosted mode and web mode; in web mode classes with static entry points are not auto-instantiated, but in hosted mode they were being instantiated before the static onModuleLoad was called.  Also resolves an issue where a superclass implementing onModuleLoad would not register if a subclass was the entry point.  - Removed a stray System.err.println() that really isn't needed. - Doc tweak to EntryPoint.onModuleLoad()  Review by: bruce "
9e7063cd5861124d628b5eb8b324ecb901eb0832,2,575,"Fixes Issue #575. Removes DOMImplMozilla's reliance on getBoxObjectFor in getAbsoluteTop/Left. getBoxObjectFor changed between 1.0.7 and current Mozilla making it hard to provide consistent behavior in hosted and web modes. Also, the new implementation returns an offset that is incompatible with our convention for gwtAbsoluteTop/Left. This also adds a simple test to cover getAbsoluteTop/Left.  Review by: jgw  "
3acacd8f523b80e5fc4f59ecd9ba10bcdca0a98a,3,"242, 933","Fixes issues 242, 540, 933.  Fixing issue 242 allowed for covariant array types to be used in RemoteService method signatures and in the fields of serializable types.  The logging produced by the RPC generator was significantly improved thereby addressing issue 540.  The root causes for a type's failure to be serializable are clearly identified in the log along with the path which got you to the failure.  Warnings were added for things like missing gwt.typeArgs javadoc annotations for Collections and Maps, final fields which are excluded from serialization, non-static nested types which are not serialized, etc.  Lastly, fixing issue 933 resulted in a significant decrease in the number of types which actually qualified for serialization.  Patch by: mmendez, scottb (changes to the emulation library) Review by: scottb  "
34dd940906a49c43580e616b6441646a08608f67,2,,"Part of this change is related to  issue #1451 (http://code.google.com/p/google-web-toolkit/issues/detail?id=1451), the fix being committed as r1293.  The goal of that change was to ensure that all String methods which could end up polymorphic would be treated specially.  However, I mistakenly thought the only methods that mattered were the Object methods.  In fact, there are also potential polymorphic methods inherited from Comparable and CharSequence that need to be taken care of.  The other half of this change relates to new Java 5.0 support.  Prior to 5.0, a method that overrode another method would always have the same param types.  However, this is no longer the case.  Implementors of Comparable<T> are one such example.  What I have put in is admittedly a quick fix to make sure than overrides with different param types would still bind to the same symbol.  However, I am sure there are still some corner cases where two different methods could bind to the same symbol.  I have a note to look into this more thoroughly later.  Review by: mmendez (postmortem) "
ce64c832e9bb0e31f9b1437b41ac3d959b50af00,2,,"Fixes issue 1059.  The problem is that all of the detected version incompatibilities between a RemoteService client and its corresponding server get converted into an InvocationException.  This is a problem because the client code does not know what caused the InvocationException and the only thing that it can do is retry.  This patch introduces an IncompatbileRemoteServiceException which is only passed to the client's AsyncCallback.onFailure(Throwable) method when:  * The requested RemoteService cannot be located via Class.forName(String) on the server. * The requested RemoteService interface is not implemented by the RemoteServiceServlet instance which is configured to process the request. * The requested service method is not defined or inherited by the requested RemoteService interface. * One of the types used in the RemoteService method invocation of the RemoteService method has had fields added or removed. * The client receives a type from the server which it cannot deserialize.  The idea is that whenever a client receives an IncompatibleRemoteServiceException it should do what ever cleanup it can and eventually cause the browser to be refreshed.  Patch by: mmendez Review by: jgw, rjellinghaus"
092c4184441fb0a004ab1cea03c18e5fee3841f3,4,"1129, 1161, 1163","This commit addresses issues 1129, 1161, and 1163 and it includes some general cleanup.  Issue 1129: The fix is that if we are in a manually serialized type that uses Object or Object[] we will consider all serializable subtypes of Object.  Without being able to deal with arrays dynamically and without giving additional information to CFS this is the best that we can do.  We should be able to handle this correctly in RPC v2.  Issue 1161: We only checked for native methods if the class was automatically serializable. Since all of our JRE classes with native methods use custom field serializers we never saw the native method warning.  When external developers added auto serializable types to the JRE they did get warnings.  This patch will skip the check for native methods if the type is part of our JRE emulation.  We assume that all types whose package names begin with ""java."" are part of our JRE.    This does not account for javax and org.* packages which are part of the real JRE.  Issue 1163: There were a few problems with this code.  First, when generating a log message we did not store whether or not it was a warning or an error.  If the type was seen multiple times, it was possible that what was previously a warning would be treated as an error.  Second, abstract classes that did not have any instantiable subtypes would be considered an error.  General cleanup: Removed several warnings about assignment to parameters and member visibility causing synthetic access methods to be generated.  Updated the test code to remove work arounds for TypeSerializer exceptions which were no longer necessary.  Based on scottb's review feedback, I renamed some of the test classes to clarify how they are used.  Fixed a couple of latent bugs where we were forcing abstract classes to be default instantiable.  I moved the async interface validation code into the ProxyCreator class since it is not really appropriate for STOB.  Lastly, updated the documentation for STOB to give more background on how it works.  Review by: scottb  "
4d1d75bfdb7473eb090e96b442dd1e8b81f2fe92,2,1509,"Added a specific check for 'iPhone' in the user-agent string, which treats it specifically as 'new' for purposes of history implementation. It also updates the user-agent version check to look for "" AppleWebKit/..."" instead of just ""WebKit/..."", per apple's specs.  Issue: 1509 Patch by: jgw Review by: bobv "
8435e965d7033cf10b1b78b302954d9ca6a4614e,2,,"This patch updates the generated, client-side RemoteService proxies to implement a SerializationStreamFactory interface.  This interface provides a way to create SerializationStreamReaders and SerializationStreamWriters that are specific to a given RemoteService proxy (this is effectively what issue 460 is asking for).  In order to keep the SerializationStreamWriter returned by SerializationStreamFactory.createStreamWriter() pure, I moved the writing of the remote service interface binary name back into the generated async proxy method.  Patch by: mmendez Review by: scottb"
1ee9dfda70c7cee18fb457bbe324b19b336c5366,2,1139,Finishes issue 1139.  Adds java.io.Serializable to our JRE's version of Throwable.  The Throwable.getMessage() method for checked exceptions thrown by RPC methods no longer returns null if a user forgets to extend SerializableException.  The basic strategy is:  1. Have the client-side code use Throwable's generated field serializer while the server special cases Throwable in its serialization/deserialization logic. 2. Only serialize the detailMessage field on Throwable.  The cause field was excluded because it could cause significant bloating of the client side proxy given the current setup of STOB.  The stack trace was not serialized because that does not seem like the type of information that you would want your clients to see.  SerializableException is now deprecated as since the detailMessage is now serialized by default.  Review by: Bobv
5bddcfca71818375a8a9c279f200087464af2cb5,2,2534,"CheckBox.ensureDebugId() now sets the ID of the input element.  Previously, it only set the ID of the label because the input element already had an ID.  I also updated RadioButtonTest because RadioButton is a subclass of CheckBox, but it did not have a test specifically for debug IDs.  Patch by: jlabanca Review by: ajr Issue: 2534  "
2496ac0ca50b761a1feefdf4176ed884d9b5bd71,2,4435,"Fixes issue 4435, Inconsistent behavior of setStyleName(), setPrimaryStyleName() and addStyleName() on new layout widgets.  While we're at it, replace the RadioButtonParser with a @UiConstructor declaration on the widget. Less code is less code.  http://code.google.com/p/google-web-toolkit/issues/detail?id=4435  Reviewe by jgw http://gwt-code-reviews.appspot.com/130810"
7d37498d888871702417b2e1b09a08ab9a725212,3,5678,Make InstanceRequest usable with value objects by changing the parameterization to BaseProxy. Add test for above. Fix bug in RequestFactoryInterfaceValidator where validateProxy() wouldn't actually validate. Issue 5678. Patch by: bobv Review by: rjrjr  Review at http://gwt-code-reviews.appspot.com/1222801 
ced8fc4f9289273506183d42d17f512a3e6ae2d3,,,"Fixes issue http://code.google.com/p/google-web-toolkit/issues/detail?id=5578  Restores the domain class upcasting behavior of RequestFactoryServlet, which is relied upon by our UserInformation class.  Also fixes the fact that UserInformation never provided a finder method, which we're now less forgiving of. Really, though, UserInformation should be a value object, not a proxy at all. It acts the way it does to hack around our lack of such things.  Also introduces unit tests to ensure that UserInformation and LoggingService keep working.  Review at http://gwt-code-reviews.appspot.com/1098801  Review by: robertvawter@google.com"
c9b164d6e6f6629b96b6924ef04da96b6d501e13,5,"5479, 5507, 5571","This patch: - reuses editors in every IsEditor widget (issue 5479) - adds a ValueLabel widget, and DateLabel and NumberLabel subclasses (issue 5507), introduces a NumberFormatRenderer (similar to the existing DateTimeFormatRenderer) for use in NumberLabel (this one is a paraterized class to make it usable with Editors: NumberLabel<Double>, NumberLabel<Integer>, etc.) - makes ToggleButton an IsEditor<LeafValueEditor<Boolean>> (issue 5571) - makes SimpleCheckBox a TakesValue<Boolean> and IsEditor<LeafValueEditor<Boolean>> to put it on par with CheckBox - makes Hidden implement TakesValue<String> and IsEditor<LeafValueEditor<String>>, which makes it usable with editors *and* FormPanel (SimpleEditor is OK if you're not using FormPanel)  Public review at http://gwt-code-reviews.appspot.com/1099801/show  Patch by: tbroyer Review by: rjrjr, jat "
06b5ad9270b066befecc25a0184f058228124bd2,2,676,"Fixes issue #676 .xhtml files do not load properly in the hosted mode browser. This is due to the fact that GWT does not support browsers running in full xhtml+xml mode and the current version of the GWTShellServlet returns application/xhtml+xml as the content type for files that end in .xhtml.  This change adds a TreeLogger warning when mime types of application/xhtml+xml are encountered and recommends an appropriate file renaming. Also, this fixes a a little typo.  Review by: scottb  "